{"ast":null,"code":"import { HEROES } from './mock-heroes'; //we want getHeroes to return an observable\n//Angular httpclient.get() function which we want to use returns an observable\n//necessary to use this to utilize asynch return, instead of unreliable synch return\n\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {\n  constructor() {}\n  /* THIS IS A SYNCHRONOUS OPERATION\r\n    getHeroes(): Hero[] {\r\n      return HEROES;\r\n    }\r\n  */\n  //Better Asynch operation\n\n\n  getHeroes() {\n    const heroes = of(HEROES);\n    return heroes;\n  }\n\n}\n\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)();\n};\n\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/angular-tour-of-heroes/src/app/hero.service.ts"],"names":["HEROES","of","i0","HeroService","constructor","getHeroes","heroes","ɵfac","HeroService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB,C,CACA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,GAAG,CAAG;AACjB;AACJ;AACA;AACA;AACA;AACI;;;AACAC,EAAAA,SAAS,GAAG;AACR,UAAMC,MAAM,GAAGL,EAAE,CAACD,MAAD,CAAjB;AACA,WAAOM,MAAP;AACH;;AAXoB;;AAazBH,WAAW,CAACI,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIN,WAAV,GAAP;AAAkC,CAAvF;;AACAA,WAAW,CAACO,KAAZ,GAAoB,aAAcR,EAAE,CAACS,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAET,WAAT;AAAsBU,EAAAA,OAAO,EAAEV,WAAW,CAACI,IAA3C;AAAiDO,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { HEROES } from './mock-heroes';\r\n//we want getHeroes to return an observable\r\n//Angular httpclient.get() function which we want to use returns an observable\r\n//necessary to use this to utilize asynch return, instead of unreliable synch return\r\nimport { of } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nexport class HeroService {\r\n    constructor() { }\r\n    /* THIS IS A SYNCHRONOUS OPERATION\r\n      getHeroes(): Hero[] {\r\n        return HEROES;\r\n      }\r\n    */\r\n    //Better Asynch operation\r\n    getHeroes() {\r\n        const heroes = of(HEROES);\r\n        return heroes;\r\n    }\r\n}\r\nHeroService.ɵfac = function HeroService_Factory(t) { return new (t || HeroService)(); };\r\nHeroService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: HeroService, factory: HeroService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}